.TH lln 1 "2025-05-30" "LLinal CLI" "User Commands"

.SH NAME
lln \- LLinal command line interface tool

.SH SYNOPSIS
.B lln
[\-p] [input_file.c] [output_file.c]

.B lln
[\-c] [input_file.c] [output_executable]

.B lln
[\-co] [input_file.c] [output_file.so]

.B lln
[\-ro] [input_file.lln] [input_file.so]

.B lln
[\-rc] [input_file.lln] [input_file.c]

.SH DESCRIPTION
The
.B lln
tool provides several modes to preprocess, compile, and run LLinal programs, a minimal glue layer that executes simple command scripts with strict programmer control.

.TP
.B \-p
Preprocess a C source file with LLinal annotations, outputting a transformed C source file. This expands LLinal-specific commands and declarations.

.TP
.B \-c
Preprocess and compile a C source file containing a main function into a self-contained executable.

.TP
.B \-co
Preprocess and compile a main-less C source file into a shared object (.so) file.

.TP
.B \-ro
Run an LLinal script (.lln file) using command implementations loaded from a shared object (.so file).

.TP
.B \-rc
Run an LLinal script (.lln file) using command implementations compiled from an unprocessed main-less C source file.

.SH EXAMPLES
Preprocess a source file:
.RS
.lln
$ lln -p input.c output.c
.RE

Compile and build an executable:
.RS
.lln
$ lln -c input.c myprogram
.RE

Compile into a shared object:
.RS
.lln
$ lln -co input.c libcommands.so
.RE

Run a script using a shared object:
.RS
.lln
$ lln -ro script.lln libcommands.so
.RE

Run a script using unprocessed C source:
.RS
.lln
$ lln -rc script.lln commands.c
.RE

.SH SEE ALSO
.B lln-preproc(1)

.SH BUGS
Report bugs to the LLinal project repository.

.SH AUTHOR
Maxime Delhaye
